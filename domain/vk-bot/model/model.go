package model

import "fmt"

type Keyboard struct {
	// –°–∫—Ä—ã–≤–∞—Ç—å –ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–ª–∞–≤–∏—à—É, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â—É—é —Å–æ–æ–±—â–µ–Ω–∏–µ. –ù–∞–ø—Ä–∏–º–µ—Ä: text –∏–ª–∏ location. –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è "inline": false.
	OneTime bool `json:"one_time,omitempty"`
	// True ‚Äî –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —Å–æ–æ–±—â–µ–Ω–∏—è. False ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –¥–∏–∞–ª–æ–≥–µ, –ø–æ–¥ –ø–æ–ª–µ–º –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.
	Inline bool `json:"inline,omitempty"`
	// –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ —Å –º–∞—Å—Å–∏–≤–æ–º –∫–ª–∞–≤–∏—à.
	Buttons [][]Button `json:"buttons"`
}

type Button struct {
	// –û–±—ä–µ–∫—Ç, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è –∏ –µ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.
	Action Action `json:"action"`
	// –¶–≤–µ—Ç –∫–Ω–æ–ø–∫–∏. –ü–∞—Ä–∞–º–µ—Ç—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ç–∏–ø–∞ text –∏ callback.
	Color Color `json:"color,omitempty"`
}

type Color string

const (
	Primary   Color = "primary"
	Secondary Color = "secondary"
	Negative  Color = "negative"
	Positive  Color = "positive"
)

// Action : https://dev.vk.com/ru/api/bots/development/keyboard
type Action struct {
	Type    string  `json:"type"`
	AppID   string  `json:"app_id,omitempty"`
	OwnerID string  `json:"owner_id,omitempty"`
	Hash    string  `json:"hash,omitempty"`
	Label   string  `json:"label,omitempty"`
	Payload Payload `json:"payload,omitempty"`
}

type Payload struct {
	Button string `json:"button,omitempty"`
}

type MorePayload struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type ButtonPayload struct {
	Button MorePayload `json:"button,omitempty"`
}

type Message struct {
	MessagePayload string        `json:"-"`
	ButtonPayload  ButtonPayload `json:"-"`
	PeerID         int           `json:"-"`
	Text           string        `json:"-"`
	ID             int           `json:"-"`
}

const (
	Status = "status"
	User   = "login"
)

type Command string

const (
	Authorization Command = "–ù–∞—á–∞—Ç—å"
	Password      Command = "–ü–∞—Ä–æ–ª—å"
	CancelAuth    Command = "–û—Ç–º–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
	DeleteAuth    Command = "–í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"
	ErrorAuth     Command = "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"

	Home         Command = "–ù–∞ –≥–ª–∞–≤–Ω—É—é"
	MyTickets    Command = "–ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è"
	CreateTicket Command = "–°–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ"

	ChangeTitle      Command = "–ó–∞–≥–æ–ª–æ–≤–æ–∫"
	ChangeBody       Command = "–û–ø–∏—Å–∞–Ω–∏–µ"
	ChangeGroup      Command = "–ì—Ä—É–ø–ø–∞"
	ChangePriority   Command = "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç"
	ChangeDepartment Command = "–û—Ç–¥–µ–ª"
	ChangeSubject    Command = "–¢–µ–º–∞"
	ChangeOwner      Command = "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π"
	//ChangeType       Command = "–¢–∏–ø"

	SendMessage Command = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç"

	Cancel Command = "–û—Ç–º–µ–Ω–∞"
	Delete Command = "–£–¥–∞–ª–∏—Ç—å"
	Send   Command = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"
)

func (c Command) String() string {
	return string(c)
}

func (c Command) Button(n string) (str string) {
	return fmt.Sprintf("{\"key\": \"%s\", \"value\": \"%s\"}", c.Key()+n, c.Value()+n)
}

func (c Command) Key() string {
	switch c {
	case SendMessage:
		return "SendMessage"
	case MyTickets:
		return "MyTickets"
	case Home:
		return "Home"
	case CreateTicket:
		return "CreateTicket"
	case DeleteAuth:
		return "DeleteAuth"
	case Delete:
		return "Delete"
	case CancelAuth:
		return "CancelAuth"
	case Cancel:
		return "Cancel"
	case ErrorAuth:
		return "ErrorAuth"
	case Password:
		return "Password"
	case ChangeOwner:
		return "ChangeOwner"
	case ChangeDepartment:
		return "ChangeDepartment"
	case Send:
		return "Send"
	case ChangePriority:
		return "ChangePriority"
	case ChangeBody:
		return "ChangeBody"
	case ChangeTitle:
		return "ChangeTitle"
	case ChangeGroup:
		return "ChangeGroup"
	//case ChangeType:
	//	return "ChangeType"
	case ChangeSubject:
		return "ChangeSubject"
	case Authorization:
		return "Authorization"
	default:
		return c.String()
	}
}

func (c Command) Value() string {
	switch c {
	default:
		return c.String()
	}
}

func (c Command) Message() string {
	switch c {
	case Authorization:
		return `‚Ñπ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –≤–∞—à –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã Zammad.

‚Ñπ –°–µ–π—á–∞—Å –≤–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω:`
	case Home:
		return `‚Ñπ –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –º–Ω–µ (–º–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤).`
	case Password:
		return `‚Ñπ –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:`
	case DeleteAuth:
		return `‚Ñπ –í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã! –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –≤–∞—à –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã Zammad.

‚Ñπ –°–µ–π—á–∞—Å –≤–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω:`
	case CancelAuth:
		return `‚Ñπ –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é! –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –≤–∞—à –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã Zammad.

‚Ñπ –°–µ–π—á–∞—Å –≤–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω:`
	case ErrorAuth:
		return `üö´ –í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É!

‚Ñπ –°–µ–π—á–∞—Å –≤–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω:`
	case MyTickets:
		return "‚Ñπ –í–∞—à–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è:"
	case CreateTicket, Cancel:
		return "üìÑ –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ üìÑ\n"
	case ChangeTitle:
		return "‚ûï –í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ (–º–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤):\n"
	case ChangeBody:
		return "‚ûï –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–º–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤):\n"
	case ChangeGroup:
		return "‚ûï –í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É:\n"
	//case ChangeType:
	//	return "‚ûï –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø:\n"
	case ChangePriority:
		return "‚ûï –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç:\n"
	case ChangeDepartment:
		return "‚ûï –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª:\n"
	case ChangeSubject:
		return "‚ûï –í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É:\n"
	case ChangeOwner:
		return "‚ûï –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ:\n"
	case SendMessage:
		return "‚ûï –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–º–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤):\n"
	case Send:
		return Send.String()
	default:
		return ""
	}
}

type WebHookMessage struct {
	Ticket struct {
		CloseAt               any    `json:"close_at"`
		CloseDiffInMin        any    `json:"close_diff_in_min"`
		CloseEscalationAt     any    `json:"close_escalation_at"`
		CloseInMin            any    `json:"close_in_min"`
		CreateArticleSender   string `json:"create_article_sender"`
		CreateArticleSenderID int    `json:"create_article_sender_id"`
		CreateArticleType     string `json:"create_article_type"`
		CreateArticleTypeID   int    `json:"create_article_type_id"`
		CreatedAt             string `json:"created_at"`
		CustomerID            int    `json:"customer_id"`
		EscalationAt          any    `json:"escalation_at"`
		Group                 struct {
			ID          int    `json:"id"`
			Name        string `json:"name"`
			UpdatedBy   string `json:"updated_by"`
			UpdatedByID int    `json:"updated_by_id"`
		} `json:"group"`
		ID                    int    `json:"id"`
		LastCloseAt           any    `json:"last_close_at"`
		LastContactAgentAt    any    `json:"last_contact_agent_at"`
		LastContactAt         string `json:"last_contact_at"`
		LastContactCustomerAt string `json:"last_contact_customer_at"`
		LastOwnerUpdateAt     any    `json:"last_owner_update_at"`
		Number                string `json:"number"`
		Owner                 struct {
			Displayname any    `json:"displayname"`
			Email       string `json:"email"`
			Firstname   string `json:"firstname"`
			ID          int    `json:"id"`
			Lastname    string `json:"lastname"`
			Mobile      string `json:"mobile"`
			Phone       string `json:"phone"`
		} `json:"owner"`
		Priority struct {
			ID          int    `json:"id"`
			Name        string `json:"name"`
			UpdatedBy   string `json:"updated_by"`
			UpdatedByID int    `json:"updated_by_id"`
		} `json:"priority"`
		State     string `json:"state"`
		StateID   int    `json:"state_id"`
		TimeUnit  any    `json:"time_unit"`
		Title     string `json:"title"`
		Type      any    `json:"type"`
		UpdatedBy struct {
			Displayname string `json:"displayname"`
			Firstname   string `json:"firstname"`
			ID          int    `json:"id"`
			Lastname    string `json:"lastname"`
		} `json:"updated_by"`
	} `json:"ticket"`
	Article struct {
		Body      string `json:"body"`
		CreatedBy struct {
			Displayname string `json:"displayname"`
			Firstname   string `json:"firstname"`
			ID          int    `json:"id"`
			Lastname    string `json:"lastname"`
		} `json:"created_by"`
		Internal  bool `json:"internal"`
		UpdatedBy struct {
			Displayname string `json:"displayname"`
			Firstname   string `json:"firstname"`
			ID          int    `json:"id"`
			Lastname    string `json:"lastname"`
		} `json:"updated_by"`
	} `json:"article"`
}
